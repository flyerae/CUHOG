#############################################################################
# Makefile for building: libVOCHOG.so.0.7.0
# Generated by qmake (2.01a) (Qt 4.7.2) on: Wed May 16 18:20:11 2012
# Project:  VOCHOG.pro
# Template: lib
# Command: /usr/bin/qmake -o Makefile VOCHOG.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -fPIC -ffast-math -fomit-frame-pointer -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -fPIC -ffast-math -fomit-frame-pointer -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I../../../NVIDIA_GPU_Computing_SDK/C/common/inc -I/usr/local/cuda/include -I.
LINK          = g++
LFLAGS        = -shared -Wl,-soname,libVOCHOG.so.0
LIBS          = $(SUBLIBS)  -L/usr/lib -lcudart -L/usr/local/cuda/lib64 -L/home/hushell/NVIDIA_GPU_Computing_SDK/C/lib -lcutil_x86_64 -lrt -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = voc_hog.cpp \
		process.cpp 
OBJECTS       = get_cells.o \
		get_features.o \
		timer.o \
		HOGUtils.o \
		voc_hog.o \
		process.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		VOCHOG.pro
QMAKE_TARGET  = VOCHOG
DESTDIR       = 
TARGET        = libVOCHOG.so.0.7.0
TARGETA       = libVOCHOG.a
TARGETD       = libVOCHOG.so.0.7.0
TARGET0       = libVOCHOG.so
TARGET1       = libVOCHOG.so.0
TARGET2       = libVOCHOG.so.0.7

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: VOCHOG.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile VOCHOG.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile VOCHOG.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/VOCHOG0.7.0 || $(MKDIR) .tmp/VOCHOG0.7.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/VOCHOG0.7.0/ && $(COPY_FILE) --parents get_cells.cu get_features.cu timer.cu HOGUtils.cu .tmp/VOCHOG0.7.0/ && $(COPY_FILE) --parents get_cells.h get_features.h voc_hog.h process.h timer.h global.h HOGDefines.h HOGUtils.h .tmp/VOCHOG0.7.0/ && $(COPY_FILE) --parents voc_hog.cpp process.cpp .tmp/VOCHOG0.7.0/ && (cd `dirname .tmp/VOCHOG0.7.0` && $(TAR) VOCHOG0.7.0.tar VOCHOG0.7.0 && $(COMPRESS) VOCHOG0.7.0.tar) && $(MOVE) `dirname .tmp/VOCHOG0.7.0`/VOCHOG0.7.0.tar.gz . && $(DEL_FILE) -r .tmp/VOCHOG0.7.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


cuclean: compiler_cu_clean

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_cu_make_all: get_cells.o get_features.o timer.o HOGUtils.o
compiler_cu_clean:
	-$(DEL_FILE) get_cells.o get_features.o timer.o HOGUtils.o
get_cells.o: get_cells.cu
	nvcc -arch=sm_20 -Xcompiler -fPIC -Xcompiler -pipe,-fPIC,-ffast-math,-fomit-frame-pointer $(DEFINES) $(INCPATH) -c -o get_cells.o get_cells.cu
	

get_features.o: get_features.cu
	nvcc -arch=sm_20 -Xcompiler -fPIC -Xcompiler -pipe,-fPIC,-ffast-math,-fomit-frame-pointer $(DEFINES) $(INCPATH) -c -o get_features.o get_features.cu
	

timer.o: timer.cu
	nvcc -arch=sm_20 -Xcompiler -fPIC -Xcompiler -pipe,-fPIC,-ffast-math,-fomit-frame-pointer $(DEFINES) $(INCPATH) -c -o timer.o timer.cu
	

HOGUtils.o: HOGUtils.cu
	nvcc -arch=sm_20 -Xcompiler -fPIC -Xcompiler -pipe,-fPIC,-ffast-math,-fomit-frame-pointer $(DEFINES) $(INCPATH) -c -o HOGUtils.o HOGUtils.cu
	

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_cu_clean 

####### Compile

voc_hog.o: voc_hog.cpp global.h \
		get_cells.h \
		get_features.h \
		voc_hog.h \
		timer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o voc_hog.o voc_hog.cpp

process.o: process.cpp voc_hog.h \
		global.h \
		process.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o process.o process.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

